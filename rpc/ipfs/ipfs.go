// Code generated by goctl. DO NOT EDIT!
// Source: storage.proto

package ipfs

import (
	"context"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	IPFS interface {
		Stage(ctx context.Context, in *APIID, opts ...grpc.CallOption) (*Cid, error)
		StageCid(ctx context.Context, in *StageCidRequest, opts ...grpc.CallOption) (*Empty, error)
		Unpin(ctx context.Context, in *UnpinRequest, opts ...grpc.CallOption) (*Empty, error)
		Pin(ctx context.Context, in *PinRequest, opts ...grpc.CallOption) (*PinResponse, error)
		Get(ctx context.Context, in *Cid, opts ...grpc.CallOption) (*Empty, error)
		Replace(ctx context.Context, in *ReplaceRequest, opts ...grpc.CallOption) (*ReplaceResponse, error)
		IsPinned(ctx context.Context, in *IsPinnedRequest, opts ...grpc.CallOption) (*IsPinnedResponse, error)
		GCStaged(ctx context.Context, in *GCStagedRequest, opts ...grpc.CallOption) (*GCStagedResponse, error)
		PinnedCids(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultIPFS struct {
		cli zrpc.Client
	}
)

func NewIPFS(cli zrpc.Client) IPFS {
	return &defaultIPFS{
		cli: cli,
	}
}

func (m *defaultIPFS) Stage(ctx context.Context, in *APIID, opts ...grpc.CallOption) (*Cid, error) {
	client := NewIPFSClient(m.cli.Conn())
	return client.Stage(ctx, in, opts...)
}

func (m *defaultIPFS) StageCid(ctx context.Context, in *StageCidRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := NewIPFSClient(m.cli.Conn())
	return client.StageCid(ctx, in, opts...)
}

func (m *defaultIPFS) Unpin(ctx context.Context, in *UnpinRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := NewIPFSClient(m.cli.Conn())
	return client.Unpin(ctx, in, opts...)
}

func (m *defaultIPFS) Pin(ctx context.Context, in *PinRequest, opts ...grpc.CallOption) (*PinResponse, error) {
	client := NewIPFSClient(m.cli.Conn())
	return client.Pin(ctx, in, opts...)
}

func (m *defaultIPFS) Get(ctx context.Context, in *Cid, opts ...grpc.CallOption) (*Empty, error) {
	client := NewIPFSClient(m.cli.Conn())
	return client.Get(ctx, in, opts...)
}

func (m *defaultIPFS) Replace(ctx context.Context, in *ReplaceRequest, opts ...grpc.CallOption) (*ReplaceResponse, error) {
	client := NewIPFSClient(m.cli.Conn())
	return client.Replace(ctx, in, opts...)
}

func (m *defaultIPFS) IsPinned(ctx context.Context, in *IsPinnedRequest, opts ...grpc.CallOption) (*IsPinnedResponse, error) {
	client := NewIPFSClient(m.cli.Conn())
	return client.IsPinned(ctx, in, opts...)
}

func (m *defaultIPFS) GCStaged(ctx context.Context, in *GCStagedRequest, opts ...grpc.CallOption) (*GCStagedResponse, error) {
	client := NewIPFSClient(m.cli.Conn())
	return client.GCStaged(ctx, in, opts...)
}

func (m *defaultIPFS) PinnedCids(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	client := NewIPFSClient(m.cli.Conn())
	return client.PinnedCids(ctx, in, opts...)
}
